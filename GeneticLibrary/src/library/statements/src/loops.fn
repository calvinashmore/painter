package library.statements;
group Loops;
type Statement;

import utils.linear.*;

description "Statements that use some looping structure.";

// the wombat function has mystical wombat powers.
fn loop_parameter {
    description "Loops n times. The parameter n is initialized to a value between 10 and 20.";

    parameter Integer n;
    cvar Integer i;
    cvar LDouble x;
    slin body;
    
    init {
        n = 10+new Random().nextInt(10);
    }
    
    exec {
        i = 0;
        while(i < n) {
            x = new LDouble(1.0*i/n);
            body.execute(context);
            i = i+1;
        }
    }
}

fn loop_input {
    description "Loops n times, where n is an input value.";
    
    cvar Integer i;
    cvar LDouble x;
    slin body;
    exin Integer n;
    
    exec {
        int nValue = (Integer) n.evaluate(context);
        
        i = 0;
        while(i < nValue) {
            x = new LDouble(1.0*i/nValue);
            body.execute(context);
            i = i+1;
        }
    }
}