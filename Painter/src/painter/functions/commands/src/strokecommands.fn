package painter.functions.commands;
group StrokeCommands;
type Command;

import utils.linear.*;
import painter.tools.canvas.*;
import painter.tools.brush.*;
import painter.tools.stroke.*;
import painter.util.curves.*;


description "Stroke commands";


fn SimpleStroke {
    in CurveUtil.Curve_v2 position;
    in Color color;
    in Brush brush;
    parameter LDouble width;

    init {
        width = new LDouble(Math.random()*.1);
    }

    exec {
        Canvas canvas = (Canvas) context.getVariable("canvas");
        Stroke stroke = new Stroke(position, color);
        stroke.setSize(width.val);
        stroke.setBrush(brush);
        stroke.render(canvas);
    }
}

fn ColorStroke1 {
    in CurveUtil.Curve_v2 position;
    in CurveUtil.Curve_col color;
    in Brush brush;
    parameter LDouble width;

    init {
        width = new LDouble(Math.random()*.1);
    }

    exec {
        Canvas canvas = (Canvas) context.getVariable("canvas");
        Stroke stroke = new Stroke(new ConstantCurve<LDouble>(width), position, color);
        stroke.setBrush(brush);
        stroke.render(canvas);
    }
}

fn ColorStroke2 {
    in CurveUtil.Curve_v2 position;
    in CurveUtil.Curve_col color;
    in LDouble width;
    in Brush brush;

    exec {
        Canvas canvas = (Canvas) context.getVariable("canvas");
        Stroke stroke = new Stroke(new ConstantCurve<LDouble>(width), position, color);
        stroke.setBrush(brush);
        stroke.render(canvas);
    }
}

fn ColorSizeStroke {
    in CurveUtil.Curve_v2 position;
    in CurveUtil.Curve_col color;
    in CurveUtil.Curve_d size;
    in Brush brush;

    exec {
        Canvas canvas = (Canvas) context.getVariable("canvas");
        Stroke stroke = new Stroke(size, position, color);
        stroke.setBrush(brush);
        stroke.render(canvas);
    }
}
