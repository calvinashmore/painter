package library.statements;
group IFSStatements;
type Statement;

import utils.linear.*;
import utils.ifs.*;

description "Loops through iterated function systems.";

fn ifsLoop_v2 {
    description "this loops through the ifs";
    exin IFSUtil.IFS_v2 ifsExpression;
    slin body;

    cvar LVect2d v;
    private Random random;

    parameter Integer seed;
    init {
        Random rand = new Random();
        seed = rand.nextInt();
    }

    setup {
        random = new Random(seed);
    }

    exec {
        IFSUtil.IFS_v2 ifs = (IFSUtil.IFS_v2) ifsExpression.evaluate(context);

        for(int i=0;i<5000;i++) {
            LVect2d start = new LVect2d(2*Math.random()-1, 2*Math.random()-1);
            LVect2d result = ifs.applyRepeatedly(start, 20, random);
            v = result;

            body.execute(context);
        }
    }
}

